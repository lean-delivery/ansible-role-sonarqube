---
# tasks file for sonarqube pre install

- name: "Become section"
  block:

  - name: "Stop SonarQube if running"
    service:
      name: "sonarqube"
      state: "stopped"
    ignore_errors: True

  - name: "Create sonar group"
    group:
      name: "{{ sonar_group }}"
      state: "present"

  - name: "Create sonar user"
    user:
      name: "{{ sonar_user }}"
      shell: "/bin/nologin"
      group: "{{ sonar_group }}"
      state: "present"
      home: "/home/{{ sonar_user }}"
      createhome: True

  - name: "Mkdir for SonarQube installation"
    file:
      path: "{{ sonar_path }}"
      state: "directory"
      owner: "{{ sonar_user }}"
      group: "{{ sonar_group }}"
      mode: "0555"

  - name: "Install requirement unzip"
    package:
      name: "unzip"
      state: "present"

  - name: "Download SonarQube installation archive"
    get_url:
      url: "{{ sonar_store }}/sonarqube-{{ sonar_major_version }}.{{ sonar_minor_version }}.zip"
      dest: "{{ download_path }}"
      mode: "0755"
    until: "'OK' in sonar_artifact.msg"
    retries: 3
    delay: 5
    delegate_to: "localhost"
    connection: "local"
    become: False
    register: sonar_artifact

  - name: "Install SonarQube {{ sonar_major_version }}.{{ sonar_minor_version }}"
    become_user: "{{ sonar_user }}"
    unarchive:
      src: "{{ sonar_artifact.dest }}"
      exclude:
        - sonarqube-{{ sonar_major_version }}.{{ sonar_minor_version }}/conf/sonar.properties
      dest: "{{ sonar_path }}"
      mode: "0755"
      list_files: True
    register: sonar_installation_result

  - name: "SonarQube installation facts"
    set_fact:
      sonar_installation: "{{ sonar_path }}/{{ sonar_installation_result.files.0 }}"
      distro: "{{ ansible_facts.system | lower }}"
      arch: "{{ 'x86-32' if ansible_architecture == 'i386' else 'x86-64' }}"

  - name: "Render sonar.properties"
    template:
      src: "sonar.properties.j2"
      dest: "{{ sonar_installation }}conf/sonar.properties"
      mode: "0400"
      owner: "{{ sonar_user }}"

  - name: "Render sonarqube.service"
    template:
      src: "sonarqube.service.j2"
      dest: "/etc/systemd/system/sonarqube.service"
      mode: "0444"
      owner: "{{ sonar_user }}"

  - name: "Systemd daemon-reload"
    systemd:
      daemon_reload: True

  - name: "Enable sonarqube.service"
    service:
      name: "sonarqube"
      enabled: True

  - name: "Render nginx config"
    template:
      src: "https.conf.j2"
      dest: "/home/{{ sonar_user }}/https.conf"
      mode: "0444"
      owner: "{{ sonar_user }}"

  become: True
