---
# tasks file for sonarqube pre install

- name: Become section
  block:

  - name: Create sonar group
    group:
      name: '{{ sonar_group }}'
      state: present

  - name: "Create sonar user"
    user:
      name: '{{ sonar_user }}'
      shell: /sbin/nologin
      group: '{{ sonar_group }}'
      state: present
      home: '/home/{{ sonar_user }}'
      createhome: True

  - name: Mkdir for SonarQube installation
    file:
      path: '{{ sonar_path }}'
      state: directory
      owner: '{{ sonar_user }}'
      group: '{{ sonar_group }}'

  - name: Install requirement unzip
    package:
      name: unzip
      state: present
    register: install_unzip_result
    until: install_unzip_result is succeeded
    retries: 3
    delay: 5

  - name: 'Install SonarQube {{ sonar_major_version }}.{{ sonar_minor_version }}'
    unarchive:
      src: '{{ sonar_store }}/sonarqube-{{ sonar_major_version }}.{{ sonar_minor_version }}.zip'
      exclude: "{{ sonar_exclude_plugins }} + \
      [ 'sonarqube-{{ sonar_major_version }}.{{ sonar_minor_version }}/conf/sonar.properties', \
      'sonarqube-{{ sonar_major_version }}.{{ sonar_minor_version }}/temp/README.txt']"
      dest: '{{ sonar_path }}'
      list_files: True
    become: True
    become_user: '{{ sonar_user }}'
    register: sonar_installation_result

  - name: SonarQube installation facts
    set_fact:
      sonar_installation: '{{ sonar_path }}/{{ sonar_installation_result.files.0 }}'

  - name: Render sonar.properties
    template:
      src: sonar.properties.j2
      dest: '{{ sonar_installation }}conf/sonar.properties'
      mode: 0400
      owner: '{{ sonar_user }}'

  - name: Render sonarqube.service
    template:
      src: sonarqube.service.j2
      dest: /etc/systemd/system/sonarqube.service
      mode: 0444
      owner: '{{ sonar_user }}'

  - name: Check nginx conf directory
    stat:
      path: /etc/nginx/conf.d
    register: nginx_conf_dir

  - name: Render nginx config
    template:
      src: nginx.sonar.conf.j2
      dest: /etc/nginx/conf.d/sonar.conf
      mode: 0444
      owner: '{{ sonar_user }}'
    when:
      - sonar_proxy_type == 'nginx'
      - nginx_conf_dir.stat.exists
      - nginx_conf_dir.stat.isdir

  - name: Download plugins
    get_url:
      url: '{{ item }}'
      dest: '{{ sonar_installation }}extensions/plugins'
      mode: 0644
      owner: '{{ sonar_user }}'
      group: '{{ sonar_group }}'
    register: download_plugins_result
    until: download_plugins_result is succeeded
    retries: 3
    delay: 5
    with_items:
      - '{{ sonar_plugins }} + {{ sonar_optional_plugins }}'

  - name: Restart sonarqube
    systemd:
      name: sonarqube
      state: restarted
      daemon_reload: True
      enabled: True

  - name: Wait for sonarqube
    uri:
      url: 'http://{{ web.host }}:{{ web.port }}'
    register: uri_result
    until: uri_result is success
    retries: 60
    delay: 1

  become: True
